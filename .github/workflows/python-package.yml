# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [main, develop]
    tags: ["*"]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, windows-latest]
        # python-version: ["3.8", "3.9", "3.10"]
        os: [windows-latest]
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v2

      - name: Install/Configure system dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install virtualbox docker-machine docker docker-compose

      # - name: Install/Configure system dependencies (Windows)
      #   if: runner.os == 'Windows'
      #   run: |
      #     cd "C:\Program Files\Docker"
      #     dir
      #     DockerCli.exe -SwitchDaemon

      - name: Startup databases
        shell: bash
        run: |
          (cd .github && docker-compose up -d)
          sh scripts/wait-for-mysql.sh 127.0.0.1 test test test
          sh scripts/wait-for-postgres.sh 127.0.0.1 test

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install Python project
        run: pip install -e .[asyncio] -r requires/test.txt

      - name: Install Python testing tools
        run: pip install flake8 pytest pytest-cov python-dotenv[cli]

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with PyTest
        shell: bash
        run: |
          export TEST_URLS="mysql://test:test@127.0.0.1:3306/test postgresql://postgres:test@127.0.0.1:5432/"
          export TEST_ASYNC_URLS="mysql+aiomysql://test:test@127.0.0.1:3306/test postgresql+asyncpg://postgres:test@127.0.0.1:5432/"
          pytest --cov src/ --cov-report xml .

      - name: Shutdown databases
        shell: bash
        run: (cd .github && docker-compose down)

      - name: Upload coverage reports to CodeCov with GitHub Action
        uses: codecov/codecov-action@v2

  check-pep440:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    outputs:
      version: ${{ steps.get-version.outputs.version }}

    steps:
      - name: Check PEP-440 style version
        id: get-version
        run: |
          PEP440_VERSION=""
          VERSION_PREFIX="v"
          BRANCH_OR_TAG="$(echo ${{ github.event.ref }} | cut -d / -f 3)"
          if [[ "${BRANCH_OR_TAG}" =~ ^v?(([1-9][0-9]*!)?(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))*((a|b|rc)(0|[1-9][0-9]*))?(\.post(0|[1-9][0-9]*))?(\.dev(0|[1-9][0-9]*))?)$ ]]
          then
            PEP440_VERSION="${BRANCH_OR_TAG#$VERSION_PREFIX}"
          fi
          echo ::set-output name=version::${PEP440_VERSION}

  publish:
    runs-on: ubuntu-latest
    needs: [check-pep440, test]
    if: needs.check-pep440.outputs.version != ''

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          cache: pip

      - name: Install build tool
        run: pip install build

      - name: Build package
        run: pyproject-build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
